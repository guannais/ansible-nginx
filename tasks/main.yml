---
# tasks file for nginx
- name: "Install package to compile"
  package: name={{ item }} state=present
  with_items:
    - build-essential
    - gcc
    - google-perftools 
    - libatomic-ops-dev
    - libbz2-dev
    - libc-client2007e
    - libc-client2007e-dev
    - libc6
    - libcurl4-openssl-dev
    - libfcgi-dev
    - libfcgi0ldbl
    - libfreetype6-dev
    - libgd2-xpm-dev 
    - libgeoip-dev 
    - libgeoip1 
    - libgoogle-perftools-dev 
    - libjpeg-dev
    - libjpeg-turbo8-dev
    - libkrb5-dev 
    - libltdl-dev
    - libmcrypt-dev
    - libpcre3
    - libpcre3-dev
    - libpcrecpp0v5
    - libperl-dev
    - libpng12-dev
    - libpq-dev 
    - libssl-dev 
    - libssl1.0.0
    - libxml2-dev 
    - libxslt1-dev 
    - lsb-base
    - openssl
    - python-dev
    - zlib1g
    - zlib1g-dev
- name: "Check - NGINX Source Dir"
  stat: "path=/usr/local/src/nginx-{{ nginx_version }}/"
  register: nginx_source_dir
- name: "Check - NGINX Source file"
  stat: "path=/usr/local/src/nginx/nginx-{{ nginx_version }}.tar.gz"
  register: nginx_source_file
- name: "Check - NGINX Compile file"
  stat: "path=/usr/local/src/nginx-{{ nginx_version }}/Makefile"
  register: nginx_compile_file
- name: "Check - NGINX Bin file"
  stat: "path=/usr/sbin/nginx"
  register: nginx_binary_file
- name: "Check - NGINX Extract Directory"
  stat: "path=/usr/local/src/nginx-{{ nginx_version }}/"
  register: nginx_extract_tar_file
- name: "Check - NGINX Service file"
  stat: "path=/etc/init.d/nginx"
  register: nginx_service_file
- name: "Check - NGINX Install Dir"
  stat: "path=/etc/nginx"
  register: nginx_install_dir
- name: "Check if NGINX is running"
  command: service nginx status
  ignore_errors: yes
  changed_when: false
  register: service_nginx_status
- name: "Download NGINX"
  get_url: 
    url: "{{ nginx_url }}"
    dest: "/usr/local/src/nginx-{{ nginx_version }}.tar.gz"
  become: "yes"
  when: not nginx_source_file.stat.exists
- name: "Create NGINX install directory"
  file: 
    path: "/etc/nginx/"
    state: "directory"
    mode: "0755"
    owner: "root"
    group: "root"
  when: not nginx_install_dir.stat.exists
- name: "Extract NGINX"
  unarchive: 
    src: "/usr/local/src/nginx-{{ nginx_version }}.tar.gz"
    dest: "/usr/local/src"
    copy: "no"
    mode: "0755"
    owner: "root"
    group: "root"
  when: not nginx_extract_tar_file.stat.exists
- name: "Replace Server Name"
  replace: "dest=/usr/local/src/nginx-{{ nginx_version }}/src/http/ngx_http_header_filter_module.c regexp='\"Server: nginx\" CRLF;' replace='\"Server: s|ngular\" CRLF;'"
- name: "Replace Server Version"
  replace: "dest=/usr/local/src/nginx-{{ nginx_version }}/src/http/ngx_http_header_filter_module.c regexp='\"Server: \" NGINX_VER CRLF;' replace='\"Server: s|ngular\" CRLF;'"
- name: "Compile NGINX"
  command: "./configure --user=nginx --group=nginx --sbin-path=/usr/sbin/nginx --conf-path=/etc/nginx/nginx.conf --error-log-path=/var/log/nginx/error.log --http-log-path=/var/log/nginx/access.log --pid-path=/var/run/nginx.pidÂ --with-select_module --with-poll_module --with-file-aio --with-ipv6 --with-http_ssl_module --with-http_realip_module --with-http_addition_module --with-http_xslt_module --with-http_image_filter_module --with-http_geoip_module --with-http_sub_module --with-http_dav_module --with-http_flv_module --with-http_mp4_module --with-http_gunzip_module --with-http_gzip_static_module --with-http_auth_request_module --with-http_random_index_module --with-http_secure_link_module --with-http_degradation_module --with-http_stub_status_module --with-http_perl_module --with-mail --with-mail_ssl_module --with-cpp_test_module --with-pcre --with-pcre-jit --with-md5-asm --with-sha1-asm --with-libatomic --with-debug --with-ld-opt='-Wl,-E' chdir=/usr/local/src/nginx-{{ nginx_version }}/"
  when: not nginx_binary_file.stat.exists
- name: "Make install NGINX"
  command: "make install chdir=/usr/local/src/nginx-{{ nginx_version }}/"
  become: "yes"
  when: not nginx_compile_file.stat.exists
- name: "NGINX create service file"
  template: 
    src: "templates/nginx.j2"
    dest: "/etc/init.d/nginx"
    owner: "root"
    group: "root"
    force: "yes"
    mode: "0755"
  become: "yes"
- name: "NGINX conf file"
  template: 
    src: "templates/nginx.conf.j2"
    dest: "/etc/nginx/nginx.conf"
    owner: "root"
    group: "root"
    force: "yes"
    mode: "0755"
  become: "yes"
  notify: NGINX service restart
- name: "Create NGINX create service"
  command:
    update-rc.d nginx defaults
  when: ansible_os_family == 'Debian' and not nginx_service_file.stat.exists
  become: "yes"
  notify: NGINX service restart
- name: "NGINX service start"
  service: 
    name: "nginx"
    enabled: "yes"
  when: not nginx_service_file.stat.exists